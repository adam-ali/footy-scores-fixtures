{"version":3,"sources":["components/results/results.js","components/fixtures/fixtures.js","components/nav/nav.js","components/home/home.js","components/App.js","serviceWorker.js","index.js"],"names":["Results","react_default","a","createElement","Component","Fixtures","Nav","Navbar","Header","Brand","href","NavItem","eventKey","Link","to","Home","nav","App","_React$createElement","BrowserRouter","Route","exact","path","Object","defineProperty","component","fixtures","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8LAeeA,0LAVP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,mCANMC,cCePC,mLAZP,OACAJ,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qCAPWC,wCCkDRE,mLA9CP,OACAL,EAAAC,EAAAC,cAAA,WAGRF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACI,EAAA,EAAOC,OAAR,KACEP,EAAAC,EAAAC,cAACI,EAAA,EAAOE,MAAR,KACER,EAAAC,EAAAC,cAAA,KAAGO,KAAK,SAAR,qBAGJT,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,SAAU,EAAGF,KAAK,aAA3B,QAGAT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAASC,SAAU,EAAGF,KAAK,KAA3B,UAbI,IAyBIT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEJb,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,aAAT,YAEJb,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,cAAT,uBAtCEV,aCcHW,mLAZP,OACAd,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAACa,EAAD,cAROZ,+BCoBJa,mLAbJ,IAAAC,EACP,OACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAA,GAADF,EAAA,CAAOG,OAAK,EAACC,KAAK,KAAlBC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,YAAAK,OAAAC,EAAA,EAAAD,CAAAL,EAAA,YAAuCH,GAAvCG,IACAjB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOE,KAAK,YAAYG,UAAWzB,IACnCC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAOE,KAAK,aAAaG,UAAWC,aAR5BtB,aCKEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOhC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQe,SAAUC,0BAAlB,IAA2ClC,EAAAC,EAAAC,cAACiC,EAAD,MAA3C,KAA8DC,SAASC,eAAe,SD0HhG,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4330db3a.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Results extends Component {\n\n    render(){\n        return(\n            <div>\n                <h1>Results</h1>\n                <p>ljdcbkbdcsbjhb</p>\n            </div>\n        )\n    }\n\n}\n\nexport default Results;","import React, { Component } from \"react\";\n\nclass Fixtures extends Component {\n\n    render() {\n        return(\n        <div>\n\n            <h1>Fixtures </h1>\n            <p>jaskjcnckchwiub </p>\n\n        </div>\n            \n        );\n    }\n}\n\nexport default Fixtures","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, NavItem } from \"react-bootstrap\";\nclass Nav extends Component {\n\n    render() {\n        return(\n        <div>\n\n\n<Navbar>\n  <Navbar.Header>\n    <Navbar.Brand>\n      <a href=\"#home\">React-Bootstrap</a>\n    </Navbar.Brand>\n  </Navbar.Header>\n  <Nav>\n    <NavItem eventKey={1} href=\"/fixtures\">\n      Link\n    </NavItem>\n    <NavItem eventKey={2} href=\"#\">\n      Link\n    </NavItem>\n  </Nav>\n</Navbar>;\n\n\n\n\n\n\n\n            <nav>\n            <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/results/\">Results</Link>\n            </li>\n            <li>\n                <Link to=\"/fixtures/\">Fixtures</Link>\n            </li>\n            </ul>\n            </nav>\n\n        </div>\n            \n        );\n    }\n}\n\nexport default Nav","import React, { Component } from \"react\";\nimport Nav from '../nav/nav';\nclass Home extends Component {\n\n    render() {\n        return(\n        <div>\n\n            <h1>Home </h1>\n            <p>jaskjcnckchwiub </p>\n            <Nav></Nav>\n        </div>\n            \n        );\n    }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport './App.css';\nimport Results from './results/results'\nimport fixtures from './fixtures/fixtures'\nimport Home from './home/home'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" exact component={Home} />\n          <Route path=\"/results/\" component={Results} />\n          <Route path=\"/fixtures/\" component={fixtures} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}> <App /> </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}